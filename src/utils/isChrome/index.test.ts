// Generated by CodiumAI

import { describe, expect, it } from "vitest";
import { BrowserType } from "../../types";
import isChrome from ".";

describe('isChrome', () => {

    // Tests that isChrome returns true when passed BrowserType.Chrome as argument
    it('should return true when passed BrowserType.Chrome', () => {
      expect(isChrome(BrowserType.Chrome)).toBe(true);
    });

    // Tests that isChrome returns false when passed any other BrowserType as argument
    it('should return false when passed any other BrowserType', () => {
      expect(isChrome(BrowserType.Arc)).toBe(false);
      expect(isChrome(BrowserType.Brave)).toBe(false);
      expect(isChrome(BrowserType.Browser)).toBe(false);
      expect(isChrome(BrowserType.Edge)).toBe(false);
      expect(isChrome(BrowserType.Firefox)).toBe(false);
      expect(isChrome(BrowserType.Opera)).toBe(false);
      expect(isChrome(BrowserType.Safari)).toBe(false);
    });

    // Tests that isChrome returns false when passed undefined as argument
    it('should return false when passed undefined', () => {
      expect(isChrome(undefined as unknown as BrowserType)).toBe(false);
    });

    // Tests that isChrome returns false when passed null as argument
    it('should return false when passed null', () => {
      expect(isChrome(null as unknown as BrowserType)).toBe(false);
    });

    // Tests that isChrome returns false when passed an empty string as argument
    it('should return false when passed an empty string', () => {
      expect(isChrome('' as unknown as BrowserType)).toBe(false);
    });
});
